* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* MAIN STRUCTURE */
.outputBody {
  display: flex;
  border: 2px solid black;
  flex-direction: column;
  width: 54%;
}

.upperBody {
  border: 2px solid blue;
  height: 80%;
  display: flex;
}
.lowerBody {
  border: 2px double rgb(174, 5, 241);
  height: 20%;
  padding: 6px;
}

/* stack div  */
.stackBody {
  border: 2px solid red;
  width: 70%;
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  overflow: scroll;
}

.topRow {
  display: flex;
  justify-content: space-between;
}

.bottomRow {
  display: flex;
  justify-content: space-between;
}
.topRow div,
.bottomRow div {
  font-size: 0.7rem;
}

/* This is styling for  Function frame */
.funCSS {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  border: 2px solid black;
  background-color: lightgreen;
  padding-inline: 2%;
  border-radius: 5px;
  width: 92%;
  position: relative;
}

.functionChildren {
    display: grid;
    /* grid-template-columns: 1fr 1fr 1fr 1fr;  */
    grid-template-columns: repeat(auto-fit, minmax(20%, 1fr));  

    gap: 4px;
    width: 100%; 
}
/* Variable Component */
/* this is a varible component where outer div has display :flex
 and align-items as center so the content is placed in center */
.varCSS {
  border: 2px solid black;
  background-color: pink;
  max-width: max-content;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* here need to use display flex so we can place value at corner and 
set width to 100% so the outer div's align item center dont mess with design*/
.varTop {
  display: flex;
  justify-content: space-between;
  width: 100%;
  font-size: 0.7rem;
  padding-inline: 12px;
  gap: 8px;
}
.varValue {
  font-size: 1.25rem;
  font-weight: 700;
}

.heapBody {
  background-color: brown;
  width: 30%;
}

/* //////////checking remains */
